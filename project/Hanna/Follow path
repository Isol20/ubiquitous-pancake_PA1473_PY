#!/usr/bin/env pybricks-micropython
import sys

from pybricks.hubs import EV3Brick
from pybricks.ev3devices import (Motor, TouchSensor, ColorSensor,
                                 InfraredSensor, UltrasonicSensor, GyroSensor)
from pybricks.parameters import Port, Stop, Direction, Button, Color
from pybricks.tools import wait, StopWatch, DataLog
from pybricks.robotics import DriveBase
from pybricks.media.ev3dev import SoundFile, ImageFile




lift = Motor(Port.A, positive_direction=Direction.CLOCKWISE, gears = [12, 36])
descend = Motor(Port.A, positive_direction=Direction.COUNTERCLOCKWISE, gears = [12, 36])

## Follow a predetermined path
ev3 = EV3Brick()
left_motor = Motor(Port.C)
right_motor = Motor(Port.B)
robot = DriveBase(left_motor, right_motor, wheel_diameter=47, axle_track = 120)
light = ColorSensor(Port.S3) 
Forksensor = TouchSensor(Port.S1)

while Forksensor.pressed() == False:
    if light.color() == Color.BLACK:  ## Välj rätt färg! Nu är det svart
        robot.drive(-70, 35)
    else:
        robot.drive(-70, -35)  ## -35 betyder att den vänder sig mot den svarta linjen

def pick_up_pallet():
    while forksensor.pressed() == False:
        bobbe.straight(50)
    lift.run_until_stalled(30, then = Stop.HOLD, duty_limit = 60)


def main():
    descend.run_until_stalled(-30, then = Stop.HOLD, duty_limit = None)
    while forksensor.pressed() == False:
        bobbe.straight(50)
    #bobbe.straight(500)
    #lift.run_time(60, 100000, then=Stop.HOLD, wait=True)
    lift.run_target(10,45, then=Stop.HOLD, wait=True)
    #lift.run_until_stalled(90, then = Stop.HOLD, duty_limit = None)
    #descend.run_until_stalled(30, then = Stop.HOLD, duty_limit = 60)
    #pick_up_pallet()
    return 0

if __name__ == '__main__':
    sys.exit(main())